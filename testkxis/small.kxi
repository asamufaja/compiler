class sus {
    public int coo;// = 1;
    public char e;// = 'E';
    public int woo;
    private uhh funs;
    sus(int i) {
        this.coo = i;
//        cout << coo;
        e = 'E';
//        cout << e;
        woo = 2;
    }

    public void okay() {

    }

    public void do(int n) {
        cout << n;
        cout << coo;
        cout << e;
    }

    public int fib(int x) {
        int tmp1;
        int tmp2;
        if (x == 0) {
            return 0;
        }
        if (x == 1) {
            return 1;
        }
        tmp1 = this.fib(x-1);
//        cout << tmp1;
//        cout << ' ';
        tmp2 = this.fib(x-2);
//        cout << ' ';
//        cout << tmp2;
//        cout << ' ';
//        cout << tmp1 + tmp2;
//        cout << ' ';
        return (tmp1) + (tmp2);  // TODO should make local func vars have a fp offset stored instead of addr
//        cout << x;
//        return this.fib(x-1) + this.fib(x-2);  // TODO I think the issue is that the ADD needs to store temp vars
        // and if it's doing that instead of pulling from the stack frame then it's got the wrong values
    }
}

class uhh {
    public void welp() {
        char e = 'E';
        cout << e;
    }
}

void kxi2022 main() {
    sus bus = new sus(1);
    bus.okay();
//    uhh umm = new uhh();
}